openapi: 3.1.0
info:
  description: This is a basic API that leverages ChatGPT to perform a smart query of an employee directory database
  version: '1.0.0'
  title: Employee Directory Lookup (for GPT Action)
security:
  - BearerAuth: []
servers:
  - url: REPLACE-WITH-DEPLOYED-API-URL
paths:
  /search:
    post:
      summary: Accepts user prompt relayed from ChatGPT, queries database, returns natural language response with results
      operationId: query
      description: Finds results in the employee directory based on the user's natural language request
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'I found one employee based on what you were looking...'
        '401':
          description: 'Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized'
                  message:
                    type: string
                    example: 'Using bearer auth. API key was either not provided or incorrect.'
                  statusCode:
                    type: integer
                    example: 401

        '500':
          description: 'Error'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Internal Server Error'
                  message:
                    type: string
                    example: 'An error occurred while processing the request.'
                  statusCode:
                    type: integer
                    example: 500
      requestBody:
        description: User prompt, relayed from ChatGPT
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: 'I want to find any employees with a first name that starts with "ANDI"'
components:
  schemas:
    UserPrompt:
      type: object
      properties:
        message:
          type: string
          example: 'I want to find any employees with a first name that starts with "ANDI"'
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: 'Internal Server Error'
        message:
          type: string
          example: 'An error occurred while processing the request.'
        statusCode:
          type: integer
          example: 500
  securitySchemes:
    BearerAuth:
      description: Service level auth token specified by developer for ChatGPT to send with request
      type: http
      scheme: bearer
